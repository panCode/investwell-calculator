'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.graph_cod = undefined;

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/root/calculator/code/cost_delay_graph.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _reactNativeWheelPickerAndroid = require('react-native-wheel-picker-android');

var _reactNativePathjsCharts = require('react-native-pathjs-charts');

var _reactNavigation = require('react-navigation');

var _reactNativeModalPicker = require('react-native-modal-picker');

var _reactNativeModalPicker2 = _interopRequireDefault(_reactNativeModalPicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
	graph_cod: {
		displayName: 'graph_cod'
	}
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
	filename: '/root/calculator/code/cost_delay_graph.js',
	components: _components,
	locals: [module],
	imports: [_react3.default]
});

function _wrapComponent(id) {
	return function (Component) {
		return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
	};
}

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    height = _Dimensions$get.height,
    width = _Dimensions$get.width;

var graph_cod = exports.graph_cod = _wrapComponent('graph_cod')(function (_Component) {
	_inherits(graph_cod, _Component);

	function graph_cod() {
		_classCallCheck(this, graph_cod);

		return _possibleConstructorReturn(this, (graph_cod.__proto__ || Object.getPrototypeOf(graph_cod)).apply(this, arguments));
	}

	_createClass(graph_cod, [{
		key: 'render',
		value: function render() {
			var params = this.props.navigation.state.params;

			var a = params.sip_amount;
			a = Number(a).toFixed();
			var b = params.sip_delay_amount;
			var c = (a - b).toFixed();
			var data = [[{
				"v": Number(params.sip_amount),
				"name": "Start Today"
			}], [{
				"v": Number(params.sip_delay_amount),
				"name": "Delayed Start"
			}], [{
				"v": Number(params.sip_amount - params.sip_delay_amount),
				"name": "Loss"
			}]];

			var options = {
				width: 200,
				height: 250,
				margin: {
					top: 20,
					left: 55,
					bottom: 50,
					right: 20
				},
				color: '#80b3ff',
				gutter: 20,
				animate: {
					type: 'oneByOne',
					duration: 200,
					fillTransition: 3
				},
				axisX: {
					showAxis: true,
					showLines: true,
					showLabels: true,
					showTicks: true,
					zeroAxis: false,
					orient: 'bottom',
					label: {
						fontFamily: 'Arial',
						fontSize: 14,
						fontWeight: true,
						fill: '#262626',
						rotate: 20
					}
				},
				axisY: {
					showAxis: true,
					showLines: true,
					showLabels: true,
					showTicks: true,
					zeroAxis: false,
					orient: 'left',
					label: {
						fontFamily: 'Arial',
						fontSize: 10,
						fontWeight: true,
						fill: '#34495E'
					}
				}
			};

			return _react3.default.createElement(
				_reactNative.ScrollView,
				{ style: { backgroundColor: '#ffffff' }, __source: {
						fileName: _jsxFileName,
						lineNumber: 83
					}
				},
				_react3.default.createElement(
					_reactNative.View,
					{ style: { flexDirection: 'column' }, __source: {
							fileName: _jsxFileName,
							lineNumber: 84
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 20, alignItems: 'center' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 85
							}
						},
						_react3.default.createElement(
							_reactNative.Text,
							{ style: { fontWeight: 'bold', fontSize: 20, color: '#000000' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 86
								}
							},
							'SIP - Cost of Delay'
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 4, flexDirection: 'row', alignItems: 'center', justifyContent: 'center', padding: 5 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 88
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { alignItems: 'flex-end', justifyContent: 'center', height: 80, width: 50 }, __source: {
									fileName: _jsxFileName,
									lineNumber: 89
								}
							},
							_react3.default.createElement(
								_reactNative.Text,
								{ style: { transform: [{ rotate: '270deg' }], color: '#000000', textAlign: 'center' }, __source: {
										fileName: _jsxFileName,
										lineNumber: 90
									}
								},
								'Amount(Rs)'
							)
						),
						_react3.default.createElement(
							_reactNative.View,
							{ style: { justifyContent: 'center', alignItems: 'center', backgroundColor: '#ffffff' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 92
								}
							},
							_react3.default.createElement(_reactNativePathjsCharts.Bar, { data: data, options: options, accessorKey: 'v', __source: {
									fileName: _jsxFileName,
									lineNumber: 93
								}
							})
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { padding: 10 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 97
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flex: 1, backgroundColor: '#b3ffd9', height: 50, justifyContent: 'center' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 98
								}
							},
							_react3.default.createElement(
								_reactNative.Text,
								{ style: { color: '#000000', fontSize: 19, padding: 10 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 99
									}
								},
								'Summary'
							)
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flexDirection: 'column', padding: 10 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 103
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flexDirection: 'row' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 104
								}
							},
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flex: 1.3 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 105
									}
								},
								_react3.default.createElement(
									_reactNative.Text,
									{ style: { fontWeight: 'normal', fontSize: 17, color: '#1a1a1a' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 106
										}
									},
									'Start Today (SIP Amount)'
								)
							),
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flex: 1 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 108
									}
								},
								_react3.default.createElement(
									_reactNative.Text,
									{ style: { fontWeight: 'normal', fontSize: 17, color: '#1a1a1a' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 109
										}
									},
									'Rs. ',
									Number(a).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
									'/- '
								)
							)
						),
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flexDirection: 'row' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 112
								}
							},
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flex: 1.3 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 113
									}
								},
								_react3.default.createElement(
									_reactNative.Text,
									{ style: { fontWeight: 'normal', fontSize: 17, color: '#1a1a1a' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 114
										}
									},
									'Delayed Start (SIP Amount)'
								)
							),
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flex: 1 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 116
									}
								},
								_react3.default.createElement(
									_reactNative.Text,
									{ style: { fontWeight: 'normal', fontSize: 17, color: '#1a1a1a' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 117
										}
									},
									'Rs. ',
									Number(Number(b).toFixed(0)).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
									'/- '
								)
							)
						),
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flexDirection: 'row' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 120
								}
							},
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flex: 1.3 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 121
									}
								},
								_react3.default.createElement(
									_reactNative.Text,
									{ style: { fontWeight: 'normal', fontSize: 17, color: 'red' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 122
										}
									},
									'Loss'
								)
							),
							_react3.default.createElement(
								_reactNative.View,
								{ style: { flex: 1 }, __source: {
										fileName: _jsxFileName,
										lineNumber: 124
									}
								},
								_react3.default.createElement(
									_reactNative.Text,
									{ style: { fontWeight: 'bold', fontSize: 17, color: 'red' }, __source: {
											fileName: _jsxFileName,
											lineNumber: 125
										}
									},
									'Rs. ',
									Number(c).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
									'/- '
								)
							)
						)
					)
				)
			);
		}
	}]);

	return graph_cod;
}(_react2.Component));

var styles = _reactNative.StyleSheet.create({
	text: {
		color: '#000000',
		fontSize: 17,
		textShadowRadius: 1
	},
	bigblue: {
		color: '#ffffff',
		fontWeight: 'bold',
		fontSize: 25,
		includeFontPadding: true,
		fontStyle: 'normal',
		textShadowRadius: 40
	},
	view: {
		color: '#000000',
		fontWeight: 'bold',
		fontSize: 16,
		alignItems: 'flex-start',
		justifyContent: 'flex-end',
		textAlign: 'center'
	},
	container: {
		height: 450,
		justifyContent: 'center',
		alignItems: 'center',
		backgroundColor: '#ffffff'
	}
});