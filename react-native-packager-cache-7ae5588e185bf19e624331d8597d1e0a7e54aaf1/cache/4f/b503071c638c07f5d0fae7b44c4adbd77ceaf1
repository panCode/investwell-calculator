'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.COD = undefined;

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = '/root/calculator/code/cost_delay.js';

var _reactNative = require('react-native');

var _reactNativeWheelPickerAndroid = require('react-native-wheel-picker-android');

var _reactNativePathjsCharts = require('react-native-pathjs-charts');

var _reactNavigation = require('react-navigation');

var _reactNativeModalPicker = require('react-native-modal-picker');

var _reactNativeModalPicker2 = _interopRequireDefault(_reactNativeModalPicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
	COD: {
		displayName: 'COD'
	}
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
	filename: '/root/calculator/code/cost_delay.js',
	components: _components,
	locals: [module],
	imports: [_react3.default]
});

function _wrapComponent(id) {
	return function (Component) {
		return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
	};
}

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    height = _Dimensions$get.height,
    width = _Dimensions$get.width;

var COD = exports.COD = _wrapComponent('COD')((_temp = _class = function (_Component) {
	_inherits(COD, _Component);

	function COD(props) {
		_classCallCheck(this, COD);

		var _this = _possibleConstructorReturn(this, (COD.__proto__ || Object.getPrototypeOf(COD)).call(this, props));

		_this.state = {
			savings: 2000,
			period: 2,
			ror: 10,
			delay: 6,
			sip_amount: 26667,
			sip_delay_amount: 19495
		};
		return _this;
	}

	_createClass(COD, [{
		key: 'change_savings',
		value: function change_savings(value) {
			var a = value;
			a = a < 1000 || a === NaN ? 1000 : a;
			var b = this.state.period * 12;
			var c = this.state.ror;
			var d = Number(this.state.delay);
			var sum = 0;
			for (var i = 1; i <= b; ++i) {
				sum += a * Math.pow(1 + c / (12 * 100), i);
			}
			sum = sum.toFixed();

			var dsum = 0;
			for (var i = 1; i <= b - d; ++i) {
				dsum += Number(a * Math.pow(1 + c / (12 * 100), i));
			}
			dsum = dsum.toFixed();
			this.setState({
				savings: value,
				sip_amount: sum,
				sip_delay_amount: dsum
			});
		}
	}, {
		key: 'change_period',
		value: function change_period(option) {
			var a = this.state.savings;
			a = a < 1000 || a === NaN ? 1000 : a;
			var b = option.label * 12;
			var c = Number(this.state.ror);
			var d = Number(this.state.delay);
			var sum = 0;
			for (var i = 1; i <= b; ++i) {
				sum += a * Math.pow(1 + c / (12 * 100), i);
			}
			sum = sum.toFixed();

			var dsum = 0;
			for (var i = 1; i <= b - d; ++i) {
				dsum += Number(a * Math.pow(1 + c / (12 * 100), i));
			}
			dsum = dsum.toFixed();

			this.setState({
				period: option.label,
				sip_amount: sum,
				sip_delay_amount: dsum
			});
		}
	}, {
		key: 'change_ror',
		value: function change_ror(option) {
			var a = this.state.savings;
			a = Number(Number(a) < 1000 || a === NaN ? 1000 : a);
			var b = this.state.period * 12;
			var c = Number(option.label);
			var d = Number(this.state.delay);
			var sum = 0;
			for (var i = 1; i <= b; ++i) {
				sum += a * Math.pow(1 + c / (12 * 100), i);
			}
			sum = sum.toFixed();

			var dsum = 0;
			for (var i = d; i <= b - d; ++i) {
				dsum += Number(a * Math.pow(1 + c / (12 * 100), i));
			}
			dsum = dsum.toFixed();
			this.setState({
				ror: option.label,
				sip_amount: sum,
				sip_delay_amount: dsum
			});
		}
	}, {
		key: 'change_delay',
		value: function change_delay(option) {
			var a = this.state.savings;
			a = a < 1000 || a === NaN ? 1000 : a;
			var b = this.state.period * 12;
			var c = this.state.ror;
			var sum = 0;
			var d = option.label;

			for (var i = 1; i <= b; ++i) {
				sum += a * Math.pow(1 + c / (12 * 100), i);
			}
			sum = sum.toFixed();

			var dsum = 0;
			for (var i = 1; i <= b - d; ++i) {
				dsum += Number(a * Math.pow(1 + c / (12 * 100), i));
			}
			dsum = dsum.toFixed();

			this.setState({
				delay: option.label,
				sip_amount: sum,
				sip_delay_amount: dsum
			});
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var navigate = this.props.navigation.navigate;


			var ydata = [];
			for (var i = 2; i <= 30; ++i) {
				var object = {};
				object["key"] = i;
				object["label"] = "" + i + "";
				ydata.push(object);
			}

			var rdata = [];
			for (var _i = 0; _i <= 30; ++_i) {
				var obj = {};
				obj["key"] = _i;
				obj["label"] = "" + _i + "";
				rdata.push(obj);
			}

			var Ddata = [];
			for (var _i2 = 6; _i2 <= 120; ++_i2) {
				var _obj = {};
				_obj["key"] = _i2;
				_obj["label"] = "" + _i2 + "";
				Ddata.push(_obj);
			}

			return _react3.default.createElement(
				_reactNative.ScrollView,
				{ KeyboardShouldPersistTaps: 'always', style: { backgroundColor: '#ffffff', padding: 5 }, __source: {
						fileName: _jsxFileName,
						lineNumber: 159
					}
				},
				_react3.default.createElement(
					_reactNative.View,
					{ style: { backgroundColor: '#ffffff' }, __source: {
							fileName: _jsxFileName,
							lineNumber: 160
						}
					},
					_react3.default.createElement(
						_reactNative.Text,
						{ style: styles.text, __source: {
								fileName: _jsxFileName,
								lineNumber: 161
							}
						},
						'This calculator illustrates how much you stand to lose in case you delay tha starting your SIP by even a few months!'
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{ style: { alignItems: 'center', flexDirection: 'row', justifyContent: 'center', padding: 20 }, __source: {
							fileName: _jsxFileName,
							lineNumber: 164
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 6, backgroundColor: '#d9d9d9', height: 60, borderRadius: 5, width: 70 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 165
							}
						},
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view, __source: {
									fileName: _jsxFileName,
									lineNumber: 166
								}
							},
							'Monthly Savings'
						),
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view1, __source: {
									fileName: _jsxFileName,
									lineNumber: 167
								}
							},
							'(Rs.)'
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 6, alignItems: 'center', justifyContent: 'center' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 169
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { width: 90, height: 40, backgroundColor: '#ffffff' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 170
								}
							},
							_react3.default.createElement(_reactNative.TextInput, {
								style: { borderWidth: 1, borderColor: '#d9d9d9', padding: 10, height: 40, width: 90, color: '#000000', textShadowRadius: 0, fontSize: 17, textAlign: 'center' },
								underlineColorAndroid: 'white',
								keyboardType: 'numeric',
								placeholder: '1000',
								editable: true,
								value: this.state.savings,
								onChangeText: function onChangeText(value) {
									return _this2.change_savings(value);
								},
								__source: {
									fileName: _jsxFileName,
									lineNumber: 171
								}
							})
						)
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{ style: { flexDirection: 'row', alignItems: 'center', justifyContent: 'center', padding: 20 }, __source: {
							fileName: _jsxFileName,
							lineNumber: 184
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 10, width: 150, height: 60, alignItems: 'center', justifyContent: 'center', backgroundColor: '#d9d9d9', borderRadius: 5 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 185
							}
						},
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view, __source: {
									fileName: _jsxFileName,
									lineNumber: 186
								}
							},
							'Investment Period'
						),
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view1, __source: {
									fileName: _jsxFileName,
									lineNumber: 187
								}
							},
							'(years)'
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 10, width: 200, alignItems: 'center', justifyContent: 'flex-start' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 189
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flex: 1, alignItems: 'center', justifyContent: 'center' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 190
								}
							},
							_react3.default.createElement(
								_reactNativeModalPicker2.default,
								{
									data: ydata,
									onChange: function onChange(option) {
										_this2.change_period(option);
									}, __source: {
										fileName: _jsxFileName,
										lineNumber: 191
									}
								},
								_react3.default.createElement(_reactNative.TextInput, {
									style: { borderWidth: 1, borderColor: '#d9d9d9', padding: 10, height: 40, width: 90, color: '#000000', textShadowRadius: 0, fontSize: 17 },
									editable: false,
									placeholder: '     2 ',
									value: this.state.period, __source: {
										fileName: _jsxFileName,
										lineNumber: 195
									}
								})
							)
						)
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{ style: { flexDirection: 'row', alignItems: 'center', justifyContent: 'center', padding: 20 }, __source: {
							fileName: _jsxFileName,
							lineNumber: 207
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 9, width: 150, alignItems: 'center', justifyContent: 'center', backgroundColor: '#d9d9d9', borderRadius: 5, padding: 10 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 208
							}
						},
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view, __source: {
									fileName: _jsxFileName,
									lineNumber: 209
								}
							},
							'Expected Rate of Return',
							_react3.default.createElement(
								_reactNative.Text,
								{ style: { fontWeight: 'normal', fontSize: 15, color: '#595959' }, __source: {
										fileName: _jsxFileName,
										lineNumber: 209
									}
								},
								'(%)'
							)
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 10, width: 200, alignItems: 'center', justifyContent: 'center' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 212
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flex: 1, justifyContent: 'center' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 213
								}
							},
							_react3.default.createElement(
								_reactNativeModalPicker2.default,
								{
									data: rdata,
									onChange: function onChange(option) {
										_this2.change_ror(option);
									}, __source: {
										fileName: _jsxFileName,
										lineNumber: 214
									}
								},
								_react3.default.createElement(_reactNative.TextInput, {
									style: { borderWidth: 1, borderColor: '#d9d9d9', padding: 10, height: 40, width: 90, color: '#000000', textShadowRadius: 0, fontSize: 17 },
									editable: false,
									placeholder: '    10',
									value: this.state.ror,
									__source: {
										fileName: _jsxFileName,
										lineNumber: 217
									}
								})
							)
						)
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{ style: { flexDirection: 'row', alignItems: 'center', justifyContent: 'center', padding: 20 }, __source: {
							fileName: _jsxFileName,
							lineNumber: 229
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 9, width: 150, alignItems: 'center', justifyContent: 'center', backgroundColor: '#d9d9d9', borderRadius: 5, padding: 10 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 230
							}
						},
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view, __source: {
									fileName: _jsxFileName,
									lineNumber: 231
								}
							},
							'Delay in starting SIP'
						),
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view1, __source: {
									fileName: _jsxFileName,
									lineNumber: 232
								}
							},
							'(in months)'
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 10, width: 200, alignItems: 'center', justifyContent: 'center' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 234
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flex: 1, justifyContent: 'center' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 235
								}
							},
							_react3.default.createElement(
								_reactNativeModalPicker2.default,
								{
									data: Ddata,
									onChange: function onChange(option) {
										_this2.change_delay(option);
									}, __source: {
										fileName: _jsxFileName,
										lineNumber: 236
									}
								},
								_react3.default.createElement(_reactNative.TextInput, {
									style: { borderWidth: 1, borderColor: '#d9d9d9', padding: 10, height: 40, width: 90, color: '#000000', textShadowRadius: 0, fontSize: 17 },
									editable: false,
									placeholder: '    6',
									value: this.state.delay,
									__source: {
										fileName: _jsxFileName,
										lineNumber: 239
									}
								})
							)
						)
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{ style: { alignItems: 'center', justifyContent: 'flex-start', padding: 28, height: 200 }, __source: {
							fileName: _jsxFileName,
							lineNumber: 251
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { width: 120 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 252
							}
						},
						_react3.default.createElement(_reactNative.Button, {
							style: { width: 600 },
							onPress: function onPress() {
								return navigate('graph_cod', { savings: _this2.state.savings, period: _this2.state.period, ror: _this2.state.ror, delay: _this2.state.delay, sip_amount: _this2.state.sip_amount, sip_delay_amount: _this2.state.sip_delay_amount });
							},
							title: 'calculate SIP',
							color: '#008080',
							__source: {
								fileName: _jsxFileName,
								lineNumber: 253
							}
						})
					)
				)
			);
		}
	}]);

	return COD;
}(_react2.Component), _class.navigationOptions = {
	title: 'SIP DELAY CALCULATOR'
}, _temp));

var styles = _reactNative.StyleSheet.create({
	text: {
		color: '#000000',
		fontSize: 17,
		textShadowRadius: 1
	},
	bigblue: {
		color: '#ffffff',
		fontWeight: 'bold',
		fontSize: 25,
		includeFontPadding: true,
		fontStyle: 'normal',
		textShadowRadius: 40
	},
	view: {
		color: '#000000',
		fontWeight: 'bold',
		fontSize: 16,
		alignItems: 'flex-start',
		justifyContent: 'flex-end',
		textAlign: 'center'
	},
	view1: {
		fontWeight: 'normal',
		fontSize: 15,
		alignItems: 'flex-start',
		justifyContent: 'flex-end',
		textAlign: 'center'
	},
	container: {
		height: 450,
		justifyContent: 'center',
		alignItems: 'center',
		backgroundColor: '#ffffff'
	}
});