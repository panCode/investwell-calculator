'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.sip = undefined;

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = '/root/calculator/code/sip.js';

var _reactNative = require('react-native');

var _reactNativeWheelPickerAndroid = require('react-native-wheel-picker-android');

var _reactNativePathjsCharts = require('react-native-pathjs-charts');

var _reactNavigation = require('react-navigation');

var _reactNativeModalPicker = require('react-native-modal-picker');

var _reactNativeModalPicker2 = _interopRequireDefault(_reactNativeModalPicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
	sip: {
		displayName: 'sip'
	}
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
	filename: '/root/calculator/code/sip.js',
	components: _components,
	locals: [module],
	imports: [_react3.default]
});

function _wrapComponent(id) {
	return function (Component) {
		return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
	};
}

var _Dimensions$get = _reactNative.Dimensions.get('window'),
    height = _Dimensions$get.height,
    width = _Dimensions$get.width;

var sip = exports.sip = _wrapComponent('sip')((_temp = _class = function (_Component) {
	_inherits(sip, _Component);

	function sip(props) {
		_classCallCheck(this, sip);

		var _this = _possibleConstructorReturn(this, (sip.__proto__ || Object.getPrototypeOf(sip)).call(this, props));

		_this.state = {
			invest: 1000,
			month: 2,
			ror: 10,
			result: 26667,
			anything: 0,
			pickm: 0,
			wheel: 1,
			text: '',
			color: 'yellow'
		};
		return _this;
	}

	_createClass(sip, [{
		key: 'change',
		value: function change(value) {
			var a = value;
			a = a < 1000 || a === NaN ? 1000 : a;
			var b = this.state.month * 12;
			var c = this.state.ror;
			var sum = 0;
			for (var i = 1; i <= b; ++i) {
				sum += a * Math.pow(1 + c / (12 * 100), i);
			}
			sum = sum.toFixed();
			this.setState({
				invest: a,
				result: sum
			});
		}
	}, {
		key: 'ywheel',
		value: function ywheel(event) {
			var a = this.state.invest;
			a = a < 1000 ? 1000 : a;
			var b = event.label * 12;
			var c = this.state.ror;
			var sum = 0;
			for (var i = 1; i <= b; ++i) {
				sum += a * Math.pow(1 + c / (12 * 100), i);
			}
			sum = sum.toFixed();
			this.setState({
				month: event.label,
				result: sum
			});
		}
	}, {
		key: 'rwheel',
		value: function rwheel(event) {
			var a = this.state.invest;
			a = a < 1000 ? 1000 : a;
			var b = this.state.month * 12;
			var c = event.label;
			var sum = 0;
			for (var i = 1; i <= b; ++i) {
				sum += a * Math.pow(1 + c / (12 * 100), i);
			}
			sum = sum.toFixed();
			this.setState({
				ror: event.label,
				result: sum
			});
		}
	}, {
		key: 'change_text',
		value: function change_text() {
			this.setState({
				text: 'Systematic Investment Plan (SIP) is an investment vehicle offered by mutual funds to investors, allowing them to invest small amounts periodically instead of lump sums. The frequency of investment is usually weekly, monthly or quarterly.',
				color: 'white'
			});
		}
	}, {
		key: 'change_t',
		value: function change_t() {
			return _react3.default.createElement(
				_reactNative.Text,
				{
					__source: {
						fileName: _jsxFileName,
						lineNumber: 86
					}
				},
				'yolo'
			);
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			var navigate = this.props.navigation.navigate;

			var ydata = [];
			for (var i = 2; i <= 30; ++i) {
				var object = {};
				object["key"] = i;
				object["label"] = "" + i + "";
				ydata.push(object);
			}

			var rdata = [];
			for (var _i = 0; _i <= 30; ++_i) {
				var obj = {};
				obj["key"] = _i;
				obj["label"] = "" + _i + "";
				rdata.push(obj);
			}
			return _react3.default.createElement(
				_reactNative.ScrollView,
				{ KeyboardShouldPersistTaps: 'always', style: { backgroundColor: '#ffffff', padding: 5 }, __source: {
						fileName: _jsxFileName,
						lineNumber: 110
					}
				},
				_react3.default.createElement(
					_reactNative.View,
					{ style: { backgroundColor: '#ffffff', padding: 10 }, __source: {
							fileName: _jsxFileName,
							lineNumber: 112
						}
					},
					_react3.default.createElement(
						_reactNative.Text,
						{ style: styles.text, __source: {
								fileName: _jsxFileName,
								lineNumber: 113
							}
						},
						'This calculator will help you to visualize the ',
						_react3.default.createElement(
							_reactNative.Text,
							{ style: { fontWeight: 'bold' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 113
								}
							},
							'Amount Accumulated'
						),
						' with a Regular Investment '
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{ style: { flex: 1, flexDirection: 'row' }, __source: {
							fileName: _jsxFileName,
							lineNumber: 115
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 2, backgroundColor: '#ffff99', padding: 10, borderRadius: 5 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 116
							}
						},
						_react3.default.createElement(
							_reactNative.TouchableOpacity,
							{ onPress: function onPress() {
									return _this2.change_text();
								}, __source: {
									fileName: _jsxFileName,
									lineNumber: 117
								}
							},
							_react3.default.createElement(
								_reactNative.Text,
								{ style: { color: '#262626', fontSize: 16, textAlign: 'center' }, __source: {
										fileName: _jsxFileName,
										lineNumber: 118
									}
								},
								'What is SIP ?'
							)
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 4 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 121
							}
						},
						_react3.default.createElement(_reactNative.Text, {
							__source: {
								fileName: _jsxFileName,
								lineNumber: 122
							}
						})
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{
						__source: {
							fileName: _jsxFileName,
							lineNumber: 125
						}
					},
					_react3.default.createElement(
						_reactNative.Text,
						{ style: { color: '#262626', fontSize: 16, textAlign: 'center' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 126
							}
						},
						this.state.text
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{ style: { alignItems: 'center', flexDirection: 'row', justifyContent: 'center', padding: 20 }, __source: {
							fileName: _jsxFileName,
							lineNumber: 128
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 6, backgroundColor: '#d9d9d9', height: 60, borderRadius: 5, width: 70 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 130
							}
						},
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view, __source: {
									fileName: _jsxFileName,
									lineNumber: 131
								}
							},
							'Monthly Savings'
						),
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view1, __source: {
									fileName: _jsxFileName,
									lineNumber: 132
								}
							},
							'(Rs.)'
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 6, alignItems: 'center', justifyContent: 'center' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 134
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { width: 90, height: 40, backgroundColor: '#ffffff' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 135
								}
							},
							_react3.default.createElement(_reactNative.TextInput, {
								style: { borderWidth: 1, borderColor: '#d9d9d9', padding: 10, height: 40, width: 90, color: '#000000', textShadowRadius: 0, fontSize: 17, textAlign: 'center' },
								underlineColorAndroid: 'white',
								keyboardType: 'numeric',
								placeholder: '1000',
								editable: true,
								value: this.state.invest,
								onChangeText: function onChangeText(value) {
									return _this2.change(value);
								},
								__source: {
									fileName: _jsxFileName,
									lineNumber: 136
								}
							})
						)
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{ style: { flexDirection: 'row', alignItems: 'center', justifyContent: 'center', padding: 20 }, __source: {
							fileName: _jsxFileName,
							lineNumber: 151
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 10, width: 150, height: 60, alignItems: 'center', justifyContent: 'center', backgroundColor: '#d9d9d9', borderRadius: 5 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 152
							}
						},
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view, __source: {
									fileName: _jsxFileName,
									lineNumber: 153
								}
							},
							'Investment Period '
						),
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view1, __source: {
									fileName: _jsxFileName,
									lineNumber: 154
								}
							},
							'(years)'
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 10, width: 200, alignItems: 'center', justifyContent: 'flex-start' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 156
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flex: 1, alignItems: 'center', justifyContent: 'center' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 157
								}
							},
							_react3.default.createElement(
								_reactNativeModalPicker2.default,
								{
									data: ydata,
									onChange: function onChange(option) {
										_this2.ywheel(option);
									}, __source: {
										fileName: _jsxFileName,
										lineNumber: 158
									}
								},
								_react3.default.createElement(_reactNative.TextInput, {
									style: { borderWidth: 1, borderColor: '#d9d9d9', padding: 10, height: 40, width: 90, color: '#000000', textShadowRadius: 0, fontSize: 17 },
									editable: false,
									placeholder: '     2 ',
									value: this.state.month, __source: {
										fileName: _jsxFileName,
										lineNumber: 162
									}
								})
							)
						)
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{ style: { flexDirection: 'row', alignItems: 'center', justifyContent: 'center', padding: 20 }, __source: {
							fileName: _jsxFileName,
							lineNumber: 174
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 9, width: 150, alignItems: 'center', justifyContent: 'center', backgroundColor: '#d9d9d9', borderRadius: 5, padding: 10 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 175
							}
						},
						_react3.default.createElement(
							_reactNative.Text,
							{ style: styles.view, __source: {
									fileName: _jsxFileName,
									lineNumber: 176
								}
							},
							'Expected Rate of Return',
							_react3.default.createElement(
								_reactNative.Text,
								{ style: { fontWeight: 'normal', fontSize: 15, color: '#595959' }, __source: {
										fileName: _jsxFileName,
										lineNumber: 176
									}
								},
								'(%)'
							)
						)
					),
					_react3.default.createElement(
						_reactNative.View,
						{ style: { flex: 10, width: 200, alignItems: 'center', justifyContent: 'center' }, __source: {
								fileName: _jsxFileName,
								lineNumber: 178
							}
						},
						_react3.default.createElement(
							_reactNative.View,
							{ style: { flex: 1, justifyContent: 'center' }, __source: {
									fileName: _jsxFileName,
									lineNumber: 179
								}
							},
							_react3.default.createElement(
								_reactNativeModalPicker2.default,
								{
									data: rdata,
									initValue: '0',
									onChange: function onChange(option) {
										_this2.rwheel(option);
									}, __source: {
										fileName: _jsxFileName,
										lineNumber: 180
									}
								},
								_react3.default.createElement(_reactNative.TextInput, {
									style: { borderWidth: 1, borderColor: '#d9d9d9', padding: 10, height: 40, width: 90, color: '#000000', textShadowRadius: 0, fontSize: 17 },
									editable: false,
									placeholder: '    10',
									value: this.state.ror,
									__source: {
										fileName: _jsxFileName,
										lineNumber: 184
									}
								})
							)
						)
					)
				),
				_react3.default.createElement(
					_reactNative.View,
					{ style: { alignItems: 'center', justifyContent: 'center', padding: 28 }, __source: {
							fileName: _jsxFileName,
							lineNumber: 197
						}
					},
					_react3.default.createElement(
						_reactNative.View,
						{ style: { width: 120, height: 20 }, __source: {
								fileName: _jsxFileName,
								lineNumber: 198
							}
						},
						_react3.default.createElement(_reactNative.Button, {
							style: { width: 600 },
							onPress: function onPress() {
								return navigate('graph_sip', { savings: _this2.state.invest, period: _this2.state.month, ror: _this2.state.ror, result: _this2.state.result });
							},
							title: 'calculate SIP',
							color: '#008080',
							__source: {
								fileName: _jsxFileName,
								lineNumber: 199
							}
						})
					)
				)
			);
		}
	}]);

	return sip;
}(_react2.Component), _class.navigationOptions = {
	title: 'SIP CALCULATOR'
}, _temp));

var styles = _reactNative.StyleSheet.create({
	text: {
		color: '#000000',
		fontSize: 17,
		textShadowRadius: 1
	},
	bigblue: {
		color: '#ffffff',
		fontWeight: 'bold',
		fontSize: 25,
		includeFontPadding: true,
		fontStyle: 'normal',
		textShadowRadius: 40
	},
	view: {
		color: '#000000',
		fontWeight: 'bold',
		fontSize: 16,
		alignItems: 'flex-start',
		justifyContent: 'flex-end',
		textAlign: 'center'
	},
	view1: {
		fontWeight: 'normal',
		fontSize: 15,
		alignItems: 'flex-start',
		justifyContent: 'flex-end',
		textAlign: 'center'
	},
	container: {
		height: 450,
		justifyContent: 'center',
		alignItems: 'center',
		backgroundColor: '#ffffff'
	}
});